FROM cgr.dev/chainguard/wolfi-base:latest@sha256:5d0f514b76a62a9557abc4d30e19c9eb3f2665f1b8227e96eff7a920e389e08b
# Thanks to Nuno do Carmo for the initial prototype

LABEL com.github.containers.toolbox="true" \
      usage="This image is meant to be used with the Toolbox or Distrobox command" \
      summary="A blank Wolfi distrobox, suitable for development" \
      maintainer="jorge.castro@gmail.com"

ARG IMAGE_NAME="${IMAGE_NAME:-wolfi-toolbox}"

COPY ./toolboxes/wolfi-toolbox/packages.wolfi \
     ./toolboxes/wolfi-toolbox/packages.wolfi-dx \
     /tmp/

# Update image
RUN apk update && \
    apk upgrade

# Add optional packages
RUN grep -v '^#' /tmp/packages.wolfi | xargs apk add && \
    if [[ "${IMAGE_NAME}" =~ "dx" ]]; then \
        grep -v '^#' /tmp/packages.wolfi-dx | xargs apk add \
    ; fi && \
    echo "#!/bin/sh" >> /usr/bin/pinentry && \
    echo "exit 0" >> /usr/bin/pinentry && \
    chmod +x /usr/bin/pinentry

# DX: Include utilities available in the melange SDK
RUN if [[ "${IMAGE_NAME}" =~ "dx" ]]; then \
        cd /tmp && \
        export PATH="/tmp/go/bin:${PATH}" && \
        # go setup
        export GOPATH="/tmp/go" && \
        mkdir -p "${GOPATH}" && \
        # goimports
        go install golang.org/x/tools/cmd/goimports@latest && \
        mkdir -p "/usr/bin" && \
        mv "${GOPATH}/bin/goimports" "/usr/bin" && \
        # melange
        git clone https://github.com/chainguard-dev/melange.git && \
        (cd melange && make melange install) && \
        # apko
        git clone https://github.com/chainguard-dev/apko.git && \
        (cd apko && make apko install) && \
        # wolfictl
        git clone https://github.com/wolfi-dev/wolfictl.git && \
        (cd wolfictl && make wolfictl install) && \
        # yam
        git clone https://github.com/chainguard-dev/yam.git && \
        (cd yam && go build -v -o "/usr/bin/yam") && \
        cd / && \
        rm -rf /tmp/* \
    ; fi

# Get Distrobox-host-exec and host-spawn
RUN git clone https://github.com/89luca89/distrobox.git --single-branch /tmp/distrobox && \
    cp /tmp/distrobox/distrobox-host-exec /usr/bin/distrobox-host-exec && \
    cp /tmp/distrobox/distrobox-export /usr/bin/distrobox-export && \
    cp /tmp/distrobox/distrobox-init /usr/bin/entrypoint && \
    wget https://github.com/1player/host-spawn/releases/download/$(cat /tmp/distrobox/distrobox-host-exec | grep host_spawn_version= | cut -d "\"" -f 2)/host-spawn-$(uname -m) -O /usr/bin/host-spawn && \
    chmod +x /usr/bin/host-spawn && \
    rm -drf /tmp/distrobox

# Make some symlinks
RUN mkdir -p /usr/local/bin  && \
    ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/docker && \
    ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/flatpak && \ 
    ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/podman && \
    ln -fs /usr/bin/distrobox-host-exec /usr/local/bin/rpm-ostree

# Change root shell to BASH
RUN sed -i -e '/^root/s/\/bin\/ash/\/bin\/bash/' /etc/passwd

# Delete nonroot user
RUN userdel nonroot && rm -rf /home/nonroot